"""init

Revision ID: 357c998aaf00
Revises: 
Create Date: 2025-10-25 00:13:27.142104

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '357c998aaf00'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('districts',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('code', sa.String(length=100), nullable=False),
    sa.Column('district_type', postgresql.ENUM('BEDROOM', 'FAMILY', 'OFFICE', 'MIXED', 'OTHER', name='district_type'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_districts_name'), 'districts', ['name'], unique=False)
    op.create_table('digital_noise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('digital_noise_score', sa.Float(), nullable=False),
    sa.Column('total_obs', sa.Integer(), nullable=True),
    sa.Column('avg_tech_weight', sa.Float(), nullable=True),
    sa.Column('noise_index_raw', sa.Float(), nullable=True),
    sa.Column('unique_users', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_digital_noise_id'), 'digital_noise', ['id'], unique=False)
    op.create_table('district_aggregates',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('district_id', sa.BIGINT(), nullable=False),
    sa.Column('daypart', sa.String(length=32), nullable=True),
    sa.Column('score_0_100', sa.Float(), nullable=True),
    sa.Column('unique_users', sa.Integer(), nullable=True),
    sa.Column('presence_count_avg', sa.Float(), nullable=True),
    sa.Column('green_presence_ratio_avg', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('district_rhythm',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('rhythm_score', sa.Float(), nullable=False),
    sa.Column('peak_hour', sa.Integer(), nullable=True),
    sa.Column('activity_amplitude', sa.Float(), nullable=True),
    sa.Column('avg_activity', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_district_rhythm_id'), 'district_rhythm', ['id'], unique=False)
    op.create_table('green_places',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('green_life_score', sa.Float(), nullable=False),
    sa.Column('total_obs', sa.Integer(), nullable=True),
    sa.Column('green_obs', sa.Integer(), nullable=True),
    sa.Column('unique_users', sa.Integer(), nullable=True),
    sa.Column('green_ratio', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_green_places_id'), 'green_places', ['id'], unique=False)
    op.create_table('life_balance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('life_balance_score', sa.Float(), nullable=False),
    sa.Column('presence_ratio', sa.Float(), nullable=True),
    sa.Column('inverse_noise', sa.Float(), nullable=True),
    sa.Column('life_balance_raw', sa.Float(), nullable=True),
    sa.Column('total_obs', sa.Integer(), nullable=True),
    sa.Column('unique_users', sa.Integer(), nullable=True),
    sa.Column('avg_tech_weight', sa.Float(), nullable=True),
    sa.Column('noise_index_raw', sa.Float(), nullable=True),
    sa.Column('digital_noise_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_life_balance_id'), 'life_balance', ['id'], unique=False)
    op.create_table('safety',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('incidents', sa.Integer(), nullable=False),
    sa.Column('incident_norm', sa.Float(), nullable=False),
    sa.Column('safety_index', sa.Float(), nullable=False),
    sa.Column('safety_level', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_safety_id'), 'safety', ['id'], unique=False)
    op.create_table('social_availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('social_availability_score', sa.Float(), nullable=False),
    sa.Column('active_hours', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_social_availability_id'), 'social_availability', ['id'], unique=False)
    op.create_table('social_life',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('normalized_score', sa.Float(), nullable=False),
    sa.Column('raw_score', sa.Float(), nullable=True),
    sa.Column('rows', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_social_life_id'), 'social_life', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_social_life_id'), table_name='social_life')
    op.drop_table('social_life')
    op.drop_index(op.f('ix_social_availability_id'), table_name='social_availability')
    op.drop_table('social_availability')
    op.drop_index(op.f('ix_safety_id'), table_name='safety')
    op.drop_table('safety')
    op.drop_index(op.f('ix_life_balance_id'), table_name='life_balance')
    op.drop_table('life_balance')
    op.drop_index(op.f('ix_green_places_id'), table_name='green_places')
    op.drop_table('green_places')
    op.drop_index(op.f('ix_district_rhythm_id'), table_name='district_rhythm')
    op.drop_table('district_rhythm')
    op.drop_table('district_aggregates')
    op.drop_index(op.f('ix_digital_noise_id'), table_name='digital_noise')
    op.drop_table('digital_noise')
    op.drop_index(op.f('ix_districts_name'), table_name='districts')
    op.drop_table('districts')
    # ### end Alembic commands ###
